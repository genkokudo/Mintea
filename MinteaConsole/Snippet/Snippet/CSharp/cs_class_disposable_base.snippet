<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>cs_class_disposable_base</Title>
      <Author>Y.Toyoda</Author>
      <Description>Disposeのクラスの基本的な実装パターンです。普通はこちらを使用。</Description>
      <HelpUrl>www.microsoft.com</HelpUrl>
      <Shortcut>cs_class_disposable_base</Shortcut>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System</Namespace>
        </Import>
      </Imports>
      <Code Language="CSharp" Kind="file" Delimiter="$"><![CDATA[
    class BaseClass : IDisposable
    {
        /// <summary>既にDisposeが呼ばれていたらtrue</summary> 
        bool disposed = false;

        /// <summary>オブジェクトを破棄する</summary> 
        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);       // もう破棄したのでファイナライザを呼ばない     
        }

        /// <summary>オブジェクトを破棄する</summary> 
        /// <param name="disposing">明示的にDisposeされた場合true、ファイナライザの場合false</param> 
        protected virtual void Dispose(bool disposing)
        {
            if (disposed)
                return;

            if (disposing)
            {
                // IDisposable を実装するほかのオブジェクトをDisposeすること 
            }

            // ファイルハンドル・ウィンドウハンドル・COM オブジェクトなどを解放すること 
            disposed = true;
        }

        // TODO:クラス名と同じ名前にする 
        /// <summary>ファイナライザ：メモリ解放の直前に呼ばれ、アンマネージリソースを解放する</summary> 
        ~BaseClass()
        {
            Dispose(false);
        }
    }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>