<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>react_setup_hooks_toolkit</Title>
      <Author>Y.Toyoda</Author>
      <Description>hooksとtoolkitを使用する場合の初期処理の書き方のまとめです。テンプレートに対して使います。</Description>
      <HelpUrl>www.microsoft.com</HelpUrl>
      <Shortcut>react_setup_hooks_toolkit</Shortcut>
    </Header>
    <Snippet>
      <Code Language="TypeScript" Kind="any" Delimiter="$"><![CDATA[// ------------------------ setupStore.ts ------------------------
import thunk from 'redux-thunk';
import { connectRouter, routerMiddleware } from 'connected-react-router';
import { History } from 'history';
import { ApplicationState, reducers } from './';
import { combineReducers, configureStore, getDefaultMiddleware } from "@reduxjs/toolkit";

/**
 * Reduxで扱うStoreを設定する、index.tsで呼び出してReact(Redux)で使用する
 * @param history
 * @param initialState
 */
export default function setupStore(history: History, initialState?: ApplicationState){
    const middlewares = [
        ...getDefaultMiddleware(),  // toolkitのデフォルトミドルウェア：状態の比較などを行うらしい
        thunk,  // 引数から関数を作る仕組み
        routerMiddleware(history)   // 今のpath, hashなどを簡単に取得できるようにする仕組み、他のpageへのナビゲートをする仕組み
    ];

    const rootReducer = combineReducers({
        ...reducers,
        router: connectRouter(history)
    });

    const store = configureStore({
        reducer: rootReducer,
        middleware: middlewares,
        preloadedState: initialState
    });

    return store;
}

// ------------------------ package.json ------------------------
// "dependencies": {
//    "@reduxjs/toolkit": "1.2.4",
//  },

// TODO: .vs/ を、.slnと同じディレクトリの方のgitignoreに追加する。
// TODO: 全てhooksで書く場合、index.tsのApplicationState, AppThunkActionは不要。]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>