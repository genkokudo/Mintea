<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>cs_class_websocket4net</Title>
      <Author>Y.Toyoda</Author>
      <Description>WebSocket4Netを使用して接続を確立します。</Description>
      <HelpUrl>www.microsoft.com</HelpUrl>
      <Shortcut>cs_class_websocket4net</Shortcut>
    </Header>
    <Snippet>
      <Code Language="CSharp" Kind="file" Delimiter="#"><![CDATA[
    /// <summary>
    /// WebSocket4Netを使用して接続を確立する
    /// </summary>
    class WebSocketWrap
    {
        /// <summary>
        /// WebSocket接続文字列
        /// </summary>
        string RequestString { get; set; }

        /// <summary>
        /// Websocketクライアント
        /// </summary>
        WebSocket Websocket { get; set; }

        /// <summary>
        /// 指定された文字列で接続を開始する
        /// </summary>
        /// <param name="requestString">WebSocket接続文字列</param>
        public void Start(string requestString)
        {
            // 初期化
            RequestString = requestString;
            Websocket = new WebSocket(RequestString);

            // イベント登録
            //Websocket.Opened += WebsocketOpened;
            Websocket.MessageReceived += WebsocketMessageReceived;
            //Websocket.Closed += WebsocketClosed;
            //Websocket.DataReceived += WebsocketDataReceived;
            //Websocket.Error += WebsocketError;
            Websocket.AutoSendPingInterval = 30;
            Websocket.EnableAutoSendPing = true;

            // 接続開始
            Websocket.Open();
            Console.ReadKey();
        }

        /// <summary>
        /// Websocketを切断する
        /// </summary>
        public void Stop()
        {
            Websocket.Close();
        }

        //private void WebsocketOpened(object sender, EventArgs e)
        //{
        //    Console.WriteLine("Websocket_Opened");
        //}
        //private void WebsocketError(object sender, SuperSocket.ClientEngine.ErrorEventArgs e)
        //{
        //    Console.WriteLine("Websocket_Error");
        //}
        //private void WebsocketDataReceived(object sender, DataReceivedEventArgs e)
        //{
        //    Console.WriteLine($"Websocket_DataReceived { e.Data }");
        //}
        //private void WebsocketClosed(object sender, EventArgs e)
        //{
        //    Console.WriteLine("closed");
        //}

        // メッセージを受信したときの処理
        private void WebsocketMessageReceived(object sender, MessageReceivedEventArgs e)
        {
            Console.WriteLine($"Websocket_MessageReceived { e.Message }");
        }

    }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>